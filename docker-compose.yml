version: '3.7'
services:

  IziGamePostgres :
    image: postgres
    hostname: IziGamePostgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    networks:
      - mynetwork

  auth:
    build: ./authorization
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://IziGamePostgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQL94Dialect
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - mynetwork
    depends_on:
      - zookeeper
      - kafka
      - IziGamePostgres

  retailer:
    build: ./retailer
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://IziGamePostgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQL94Dialect
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - mynetwork
    depends_on:
      - zookeeper
      - kafka
      - IziGamePostgres

  catalog:
    build: ./catalog
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://IziGamePostgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQL94Dialect
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - mynetwork
    depends_on:
      - zookeeper
      - kafka
      - IziGamePostgres

  kafka:
    image: wurstmeister/kafka
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CREATE_TOPICS: "person:3:3,personEmail:3:3,personPayGame:3:3,PayPerson:3:3"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 3
      KAFKA_CONFLUENT_SUPPORT_METRIC_REPORTER_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_KRAFT_MODE: "true"
      KAFKA_KRAFT_NETWORK_INTERFACES: "eth0"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - mynetwork

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - mynetwork


  IziGamePostgresLocal:
    image: postgres
    hostname: IziGamePostgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password

      version: '3.1'

  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./data:/data/db
    environment:
      MONGO_INITDB_DATABASE: user


networks:
  mynetwork:
    driver: bridge
